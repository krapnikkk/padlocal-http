import { IMessage, Media, miniProgramShareInfo, PadLocalClientConfig, ReplyComment, ShareInfo, SNSImageMoment, SNSMomentType, SNSMonentOption } from "./interface";
import * as pb from "padlocal-client-ts/dist/proto/padlocal_pb";
declare const PadLocal: {
    isLogin: boolean;
    messageHandler: null;
    install: (config: PadLocalClientConfig) => void;
    login: () => Promise<string>;
    logout: () => Promise<unknown>;
    sendMessage: (msg: IMessage) => Promise<unknown>;
    sendMedia: (id: string, file: string, type: Media) => Promise<unknown>;
    sendAppMessageLink: (id: string, info: ShareInfo) => Promise<unknown>;
    sendAppMessageMiniProgram: (id: string, info: miniProgramShareInfo) => Promise<unknown>;
    sendContactCardMessage: (id: string, userName: string) => Promise<unknown>;
    addContact: (userName: string, greeting: string) => Promise<unknown>;
    deleteContact: (userName: string) => Promise<unknown>;
    getContact: (userName: string) => Promise<unknown>;
    getContactQRCode: (userName: string) => Promise<unknown>;
    searchContact: (userName: string) => Promise<unknown>;
    updateSelfNickName: (nickname: string) => Promise<unknown>;
    updateSelfSignature: (signature: string) => Promise<unknown>;
    zombieTest: (userName: string) => Promise<unknown>;
    updateContactRemark: (userName: string, remark: string) => Promise<unknown>;
    createChatRoom: (userNameList: string[]) => Promise<unknown>;
    getChatRoomMembers: (roomId: string) => Promise<unknown>;
    getChatRoomQrCode: (roomId: string) => Promise<unknown>;
    getChatRoomMember: (roomId: string, userName: string) => Promise<unknown>;
    setChatRoomAnnouncement: (roomId: string, announcement: string) => Promise<unknown>;
    setChatRoomName: (roomId: string, roomName: string) => Promise<unknown>;
    addChatRoomMember: (roomId: string, userName: string) => Promise<unknown>;
    deleteChatRoomMember: (roomId: string, userName: string) => Promise<unknown>;
    inviteChatRoomMember: (roomId: string, userName: string) => Promise<unknown>;
    quitChatRoom: (roomId: string) => Promise<unknown>;
    getLabelList: () => Promise<unknown>;
    addLabel: (label: string) => Promise<unknown>;
    removeLabel: (labelId: number) => Promise<unknown>;
    setContactLabel: (userName: string, labelList: number[]) => Promise<unknown>;
    snsGetTimeline: (maxId: string) => Promise<unknown>;
    snsGetMoment: (momentId: string) => Promise<unknown>;
    snsSendMoment: (type: SNSMomentType, content: string | SNSImageMoment | ShareInfo, options: SNSMonentOption) => Promise<unknown>;
    uploadImages: (imageFilePathList: string[], description?: string | undefined) => Promise<pb.SnsImageUrl[]>;
    snsRemoveMoment: (momentId: string) => Promise<unknown>;
    snsSendComment: (momentId: string, momentOwnerUserName: string, commentText: string, replyTo?: ReplyComment | undefined) => Promise<unknown>;
    snsLikeMoment: (momentId: string, momentOwnerUserName: string) => Promise<unknown>;
    snsUnlikeMoment: (momentId: string) => Promise<unknown>;
    snsRemoveMomentComment: (momentId: string, commentId: string) => Promise<unknown>;
    snsMakeMomentPrivate: (momentId: string) => Promise<unknown>;
    snsMakeMomentPublic: (momentId: string) => Promise<unknown>;
};
export default PadLocal;
